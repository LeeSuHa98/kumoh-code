#pragma once
#include<iostream>
using namespace std;

template<class T>
class Queue {
private:
	T *queue;
	int front;
	int rear;
	int capacity;

public:
	void push(const T& x);

};

template<class T>
void Queue<T>::push(const T& x)
{
	if ((rear + 1) % capacity == front)		// 원형큐 기준으로 capacity에 가득 찼다면	-->  큐의 용량을 늘려주는 작업을 해야함.
	{
		T *newQueue = new T[2 * capacity];

		int start = (front + 1) % capacity;

		if (start < 2)
		{
			for (int i = 0; i < capacity; i++)
				newQueue[i] = queue[i];
		}

		else
		{
			for (int i = 0; i < capacity; i++)
			{
				if (start > i)
					newQueue[capacity - start + i] = queue[i];

				else if (start <= i)
					newQueue[start - i] = queue[i];
			}
		}
	}

	rear = (rear + 1) % capacity;
	queue[rear] = x;
}